#!/bin/bash

# This script requires FFMPEG and ImageMagick installed. Open-Pose is
# expected to have been compiled under $HOME/openpose/. (Otherwise
# change the paths below.)

# First: generate input images from film:
# the Open-Pose library does have an excellent support to read input movies in
# multiple formats, but this project wants to do a horizontal comparison on
# each frame, the frame from the original movie and the multi-point wire model
# generated by Open-Pose (see the file
#    result_combined_1919_Arbuckle_Buster_Keaton_Back_Stage_frame_000513.png
# in the "extras/" subdirectory in this project how the frames of the
# side-by-side comparison are.

input_movie=./Buster_Keaton_The_Eccentric_Dancer.mkv
mkdir $HOME/op_input_imgs    # create the directory (any name) with input frames
ffmpeg -i "$input_movie" -r 24 -vf scale=1280x720  $HOME/input_imgs/original_input_%06d.png

# Call the Open-Pose wrapper "openpose.bin". We suppose that OpenPose has been
# compiled under the tree $HOME/openpose/ using its script
# "install_caffe_and_openpose_if_cuda8.sh"
# The parameter "--disable_blending" is important so that the OpenPose wrapper
# generates only the multi-point wire image.
# More options command-line options of the Open-Pose wrapper "openpose.bin" at:
# https://github.com/CMU-Perceptual-Computing-Lab/openpose/blob/master/doc/demo_overview.md#most-important-configuration-flags

LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/openpose/3rdparty/caffe/distribute/lib/
export LD_LIBRARY_PATH

$HOME/openpose/.build_release/examples/openpose/openpose.bin \
     -render_pose 1 \
     -write_images /home/ubuntu/tmp/ \
     -image_dir /home/ubuntu/input_imgs/ \
     -no_display \
     -alpha_pose 0 \
     --disable_blending

# montage the result (multi-point wire model) to the left with the original
# frames of the movie to the right using ImageMagick's "montage" program.

for pre_deep_pose in input_imgs/original_input_0*.png; do
    post_deep_pose=$( sed 's#input_imgs/#tmp/#; s#.png#_rendered.png#' <<< "$pre_deep_pose" )
    result=$( sed 's#input_imgs/#combined_output/#; s#original_input_#result_#' <<< "$pre_deep_pose" )
    montage "$post_deep_pose" "$pre_deep_pose" -geometry +1+1  "$result"
done

# finally: generate movie

rate=24

mencoder mf://result_0*.png -mf fps=${rate}:type=png -ovc x264 -x264encopts bitrate=1200:threads=2 -o result_side_by_side.avi  -oac copy -audiofile music.mp3

